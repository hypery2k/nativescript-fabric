env:
 global:
   - ANDROID_PACKAGE='demo-debug.apk'
   - ANDROID_PACKAGE_FOLDER=$TRAVIS_BUILD_DIR/demo/platforms/android/build/outputs/apk/debug
   - ANDROID_SAUCE_STORAGE="https://saucelabs.com/rest/v1/storage/$SAUCE_USER/$ANDROID_PACKAGE?overwrite=true"
   - IOS_PACKAGE='demo.zip'
   - IOS_PACKAGE_FOLDER=$TRAVIS_BUILD_DIR/demo/platforms/ios/build/emulator
   - IOS_SAUCE_STORAGE="https://saucelabs.com/rest/v1/storage/$SAUCE_USER/$IOS_PACKAGE?overwrite=true"
   - EMULATOR_NAME=test
   - ANDROID_API_LEVEL=28
   - ANDROID_BUILD_TOOLS_VERSION=28.0.3
   - ANDROID_ABI=armeabi-v7a
   - ANDROID_TAG=google_apis
   - ADB_INSTALL_TIMEOUT=20 # minutes (2 minutes by default)

matrix:
 include:
   - stage: "Lint"
     language: node_js
     os: linux
     node_js: "10"
     before_install:
      - cd publish && npm run setup-dev-env && cd ..
     script: cd src && npm run ci.tslint && npm run build && cd ../demo && npm run ci.tslint && cd ../demo-angular && npm run ci.tslint
   - stage: "WebPack and Build"
     os: osx
     env:
       - WebpackiOS="12"
     osx_image: xcode10.0
     language: node_js
     node_js: "10"
     jdk: oraclejdk8
     before_script:
       - gem install cocoapods
       - gem install xcodeproj
       - brew install xcproj
       - pod repo update
       - sudo pip install six
     before_install:
       - pod repo update
       - cd publish && npm run setup-dev-env && cd ..
       - cd src && npm i && cd ..
     script: cd demo && npm run build-ios-bundle && cd ../demo-angular && npm run build-ios-bundle
   - language: android
     os: linux
     env:
       - Webpack="Android"
     jdk: oraclejdk8
     before_install:
       - nvm install 10
       - cd publish && npm run setup-dev-env && cd ..
       - cd src && npm i && cd ..
     script: cd demo npm run build-android-bundle && cd ../demo-angular && npm run build-android-bundle
   - language: android
     env:
       - BuildAndroid="26"
     os: linux
     jdk: oraclejdk8
     before_install:
       - nvm install 10
       - android list targets
       - echo no | android create avd --force -n $EMULATOR_NAME -t android-25  --abi $ANDROID_ABI --tag $ANDROID_TAG
       - QEMU_AUDIO_DRV=none emulator -avd $EMULATOR_NAME -no-window &
       - cd src && npm i && cd ..
       - cd publish && npm run setup-dev-env && cd ..
     script:
       - cd demo && npm run ci.android.build && cd ../demo-angular && npm run ci.android.build
       - "curl -u $SAUCE_USER:$SAUCE_KEY -X POST -H 'Content-Type: application/octet-stream' $ANDROID_SAUCE_STORAGE --data-binary @$ANDROID_PACKAGE_FOLDER/$ANDROID_PACKAGE"
   - os: osx
     env:
       - BuildiOS="12"
     osx_image: xcode10.0
     language: node_js
     node_js: "10"
     jdk: oraclejdk8
     before_script:
       - gem install cocoapods
       - gem install xcodeproj
       - brew install xcproj
       - pod repo update
       - sudo pip install six
     before_install:
       - pod repo update
       - cd publish && npm run setup-dev-env && cd ..
       - cd src && npm i && cd ..
     script:
       - cd demo && npm run ci.ios.build && cd ../demo-angular && npm run ci.ios.build
       - cd $IOS_PACKAGE_FOLDER && zip -r $IOS_PACKAGE demo.app
       - "curl -u $SAUCE_USER:$SAUCE_KEY -X POST -H 'Content-Type: application/octet-stream' $IOS_SAUCE_STORAGE --data-binary @$IOS_PACKAGE_FOLDER/$IOS_PACKAGE"
   - stage: "UI Tests"
     env:
     - Android="25"
     language: node_js
     os: linux
     node_js: "10"
     before_install:
       - cd src && npm i && cd ..
     script:
       - npm i -g appium
       - cd publish && npm run setup-dev-env && cd ..
       - cd demo && npm i
       - travis_retry npm run e2e -- --runType android25 --sauceLab --reuseDevice --appPath $ANDROID_PACKAGE --appPackage org.nativescript.demo
   - os: linux
     env:
       - iOS="10"
     language: node_js
     node_js: "10"
     before_install:
       - cd src && npm i && cd ..
     script:
       - npm i -g appium
       - cd publish && npm run setup-dev-env && cd ..
       - cd demo && npm i
       - travis_wait travis_retry npm run e2e -- --runType sim103iPhone6 --sauceLab --reuseDevice --appPath $IOS_PACKAGE --appPackage org.nativescript.demo

android:
 components:
   - platform-tools
   - tools # to install Android SDK tools
   - build-tools-$ANDROID_BUILD_TOOLS_VERSION
   - android-$ANDROID_API_LEVEL
   # For Google APIs
   - addon-google_apis-google-$ANDROID_API_LEVEL
   # Google Play Services
   - extra-google-google_play_services
   # Support library
   - extra-android-support
   # Latest artifacts in local repository
   - extra-google-m2repository
   - extra-android-m2repository
   # Specify at least one system image
   - sys-img-armeabi-v7a-android-21
   - sys-img-armeabi-v7a-google_apis-25
   - sys-img-armeabi-v7a-android-$ANDROID_API_LEVEL

before_install:
    - sudo pip install --upgrade pip
    - sudo pip install six
licenses:
  - ".+"

before_cache:
   - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock

cache:
   directories:
       - .nvm
       - $HOME/.gradle/caches/
       - $HOME/.gradle/wrapper/

install:
   - echo no | npm install -g nativescript
   - tns usage-reporting disable
   - tns error-reporting disable
